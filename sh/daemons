#!/bin/sh
# run <daemons> once on boot or login
# run <browse> for usage sessions

#BASICS
# rewrite the web at request-time to make it suck less
# most requests go out to internet unchanged (basic inspection/logging only)
# <proxyhosts> turns <proxy.domains> into OS proxy skiplist
# routing rules send un-proxied traffic to local daemon

#NOTES
# - legacy non-sandboxing OS users should DIY uid-separation by making a user, say 'web' or 'proxy', to run this
#   the OS needs to be able to differentiate traffic from the proxy vs traffic to be directed into the proxy
#   actual name and UID doesn't matter, it's figured out on the fly with 'id -u' below. systemd can mint one on the fly
# - this is minimally paranoid setup, requests go OUT by default. if you want to maximize, flip it so requests to IN by default:
#   daemon or reverse-proxy on port 8080, and block all outgoing but but 80/443 from proxy UID

#ENVIRONMENT
# set DATAPEER to user@host if using multiple devices. typically use a basic star topology here but get NNTP-ish if you want
# no_proxy/NO_PROXY is set automatically by <browse> run <proxyhosts> to see current value or for pasting into OS/Browser config on OSes which make you use a GUI to set environment variables
# http_proxy/https_proxy is OS outgoing proxy preference not assumed to be ours so change it to whatever you want. mitmproxy on default gateway, squid or varnish for caching. it could of course point to us though, such as in PARANOID MODE

# initialize attachable console
tmux new-session -s web -d -c ~/web

# route traffic on default HTTP/HTTPS ports to IN proxy
proxy_uid=$(id -u)
routeconfig=$(realpath ~/src/pw/sh/routes)
su -c "sh $routeconfig $proxy_uid"

# daemon
tmux send-keys -t web:0 'unicorn -N -p 8000 -o localhost .conf/rack.ru' C-m

# add HTTPS support to local daemon
tmux new-window -t web:1 -d mitmdump -p 8888 -m reverse:http://localhost:8000 --set keep_host_header=true

# outgoing proxy
tmux new-window -t web:2 -d mitmdump

# database synchronization
tmux new-window -t web:3 -d
tmux send-keys -t web:3 "watch -n 288 rsync -av $DATAPEER:web/`date +%Y/%m/%d` ~/web/`date +%Y/%m`" C-m

# user input
tmux attach-session -t web
