#!/bin/sh
# DAEMONS run on boot or login to enable request-time web rewriting
#NOTES
# - non-sandboxing OS users (on Android+Termux user-agent and proxy are already separate UID) should DIY uid-separation by making a user, say 'web' or 'proxy' (name/UID doesn't matter, it's bound on the fly),
#  so OS can differentiate traffic from the proxy vs traffic to be captured for proxy handling.
# - set DATAPEER to user@host for watch+rsync db sync in star or mesh topology, or comment out and setup synthing/Ceph/AFS on your own 
# - swap 8080 and 8888 proxy ports for hostlist as opt-out instead of opt-in

# initialize controlling console
tmux new-session -s web -d -c ~/web

# start local daemon
tmux send-keys -t web:0 'unicorn -N -p 8000 .conf/rack.ru' C-m

# selectively route HTTP/HTTPS traffic to proxy
proxy_uid=$(id -u)
routeHTTP=$(realpath ~/src/pw/sh/routeHTTP)
routeHTTPS=$(realpath ~/src/pw/sh/routeHTTPS)
su -c "sh $routeHTTP $proxy_uid"
su -c "sh $routeHTTPS $proxy_uid"

# incoming reverse-proxy (8888)
# apps oblivious to system proxy have their traffic sent here via routing rules when using default non-proxy ports
# hosts also selectable for proxying via OS or browser configuration, using HTTP (port 80 goes to proxy) or env-var facilitated hostmasks, see <proxyhosts> and <browse> script additional tools
tmux new-window -t web:1 -d mitmdump -p 8888 -m reverse:http://localhost:8000 --set keep_host_header=true

# outgoing proxy (8080)
tmux new-window -t web:2 -d mitmdump

# database synchronization
tmux new-window -t web:3 -d
tmux send-keys -t web:3 "watch -n 288 rsync -av $DATAPEER:web/`date +%Y/%m/%d` ~/web/`date +%Y/%m`" C-m

# user input
tmux attach-session -t web
