#!/bin/sh
# script to launch local HTTP daemon and configure system to route each packet to one of two proxies
# proxy IN is a reverse proxy in front of the daemon. HTTP traffic needing rewriting or blackholing goes here
# proxy OUT is for traffic ready to go out to the internet. CONNECT requests supported
# run 'proxyhosts' to output pattern for IN proxy selection in env-var/proxy-userinterface-ready format
# or 'browse' to do that, put the settings in appropriate env-vars and launch a browser

proxy_uid=$(id -u)
routeconfig=$(realpath ~/src/pw/sh/routes)

# initialize session handler TODO systemd-unit as alternative to tmux
tmux new-session -s web -d -c ~/web

# configure network
su -c "sh $routeconfig $proxy_uid"

# launch daemon
tmux send-keys -t web:0 'unicorn  -p 8000 -o localhost .conf/rack.ru' C-m

# HTTP (IN)
tmux new-window -t web:1 -d mitmdump -p 8888 -m reverse:http://localhost:8000 --set keep_host_header=true
# to bypass handling and send everything OUT with only inspection+logging, ctrl-C this and run:
# mitmdump -p 8888 -m transparent

# HTTP (OUT)
tmux new-window -t web:2 -d mitmdump

# database synchronization
tmux new-window -t web:3 -d
tmux send-keys -t web:3 "watch -n 288 rsync -av $DATAPEER:web/`date +%Y/%m/%d` ~/web/`date +%Y/%m`" C-m

# user input
tmux attach-session -t web
