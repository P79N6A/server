#!/bin/sh
# initial policy
iptables  -P INPUT DROP
ip6tables -P INPUT DROP
iptables  -P OUTPUT DROP
ip6tables -P OUTPUT DROP

# allow localhost
iptables  -A INPUT -i lo -j ACCEPT
ip6tables -A INPUT -i lo -j ACCEPT
iptables  -A OUTPUT -o lo -j ACCEPT
ip6tables -A OUTPUT -o lo -j ACCEPT
# allow ICMP
iptables  -A INPUT -p icmp -j ACCEPT
ip6tables -A INPUT -p icmp -j ACCEPT
iptables  -A OUTPUT -p icmp -j ACCEPT
ip6tables -A OUTPUT -p icmp -j ACCEPT

# TODO handle QUIC, for now use TCP protocols
iptables  -A OUTPUT -p udp --dport 80 -j DROP
ip6tables -A OUTPUT -p udp --dport 80 -j DROP
iptables  -A OUTPUT -p udp --dport 443 -j DROP
ip6tables -A OUTPUT -p udp --dport 443 -j DROP

# transparent proxy
iptables  -t nat -A OUTPUT -p tcp --dport  80 -j REDIRECT --to-ports 8000
ip6tables -t nat -A OUTPUT -p tcp --dport  80 -j REDIRECT --to-ports 8000
iptables  -t nat -A OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 8081
ip6tables -t nat -A OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 8081

sh $1/open_TCP    22 # SSH
sh $1/open_TCP    43 # WHOIS
sh $1/open_port   53 # DNS
sh $1/open_port   67 # DHCP
sh $1/open_port   68 # DHCP
sh $1/open_TCP    80 # HTTP
sh $1/open_TCP   443 # HTTPS
sh $1/open_port 6789 # IRC
sh $1/open_port 8000 # HTTP
sh $1/open_TCP  8022 # SSH
sh $1/open_port 8080 # HTTPS explicit proxy
sh $1/open_port 8081 # HTTPS transparent proxy
sh $1/open_UDP 60001 # Mosh
sh $1/open_UDP 60002
sh $1/open_UDP 60003
