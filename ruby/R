#!/usr/bin/env ruby
exit 0 if ARGV.empty?
require 'ww'
begin
  uri = R[ARGV[0]]
  # populate request fields as no webserver
  r = R[uri.to_s.sub(/\?#{uri.query}$/,'')]
  r.setEnv({ 'QUERY_STRING' => uri.query||'',
             'REQUEST_PATH' => r.justPath.to_s,
             'REQUEST_URI' => uri.justPath.to_s,
             'SERVER_NAME' => r.host||'localhost',
             :Response => {}, :Links => {},
           }.extend Th)

  # do
  out = r.send *ARGV[1..-1]

  # HTTP-response to stdout
  if out.class==Array && out.size==3 && out[0].class == Fixnum
    require 'thin' # use thin to 'pretty print' response to match curl -i
    response = Thin::Response.new
    response.status, response.headers, response.body = *out
    response.each do |part|
      puts part
    end
  else
    puts out
  end
end
