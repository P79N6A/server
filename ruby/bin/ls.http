#!/usr/bin/env ruby
require 'linkeddata'

stat = "http://www.w3.org/ns/posix/stat#"
ldp = "http://www.w3.org/ns/ldp#"
mtime = RDF::URI(stat+'mtime')
size  = RDF::URI(stat+'size')

ftypes = [RDF::RDFS.Resource, RDF::URI(stat+'File')],                   resources = []
dtypes = [RDF::URI(ldp+'Container'), RDF::URI(ldp+'BasicContainer'), RDF::URI(stat+'Directory')], containers = []

graph = RDF::Graph.load ARGV[0]

[[ftypes, resources], [dtypes, containers]].
  map{|types,values|
       types.map{|t|
 
    graph.query([nil, RDF.type, t]){|s,p,o|
      unless values.member? s
        values.push [graph.first_object([s, size, nil]),
            (Time.at graph.first_object([s, mtime, nil])).iso8601,
                      '<'+s+'>']
      end}}}

[containers,resources].map{|items|
  puts items.map{|t|t.join "\t"}}
