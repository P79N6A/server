PW is a HTTP daemon conforming to conventions outlined in http://linkeddata.github.io/SoLiD/

 HTTP
 - HTTP handler does many things linked-data clients expect (similar behavior to https://github.com/linkeddata/gold/ + https://github.com/read-write-web/rww-play)
 - authentication of users: WebID claim-verification
 - accept edits and uploads on PUT and POST
 - provide a basic editor for basic browsers w/ <form> capability, bootstrap (third-party) JS+SPARQL editor for modern user-agents
 - paging large-containers: summarization, Link headers, sorted-ranges, offsets/cursors

 MIME
 - parse Non-RDF to RDF: mail-messages, Atom/RSS feeds, chatlogs, text-files, CSV, Markdown, highlighted-code
 - serialize to Non-RDF: Atom/RSS feeds and lynx/links/w3m-compatible HTML[1234]
 - MIME-transcode accessible via HTTP content-negotiation
 - alternative to HTTP-header based content-negotiation using name-extension (suffix) hints 
 - alternative to "slower" MIMEs using pure-Ruby RDF-parsers w/ the native JSON-library and a subset of RDF

 FRAMEWORK
 - customize behaviour by binding lambdas to RDF-typeclasses
 - domain-configurations for email, lifestream/newsfeed/timeline-aggregation, full-text/indexed search and unindexed-search (find + grep)
 - stored URIs are relative and late-bound. mount your data on any hostname (symlinks, cp, rsync, NFS) on HTTP or HTTPS
 - light and lightweight on dependencies. no SQL or SPARQL database needed, just a filesystem 

SRC  git clone https://github.com/hallwaykid/pw.git ||
     git clone http://repo.or.cz/w/www.git

PREREQUISITES
 install ruby bundler libssl-dev libgit2-dev libxml2-dev libxslt1-dev cmake pkg-config

INSTALL cd pw/ruby     # enter source-dir
	./install      # symlink source-code to lib-path
        bundle install # install Ruby-dependencies
USE     cd ..          # goto server-root (can be elsewhere, but copy or link {css,js})
        ln conf/server/Procfile . # select daemon
        foreman start  # run HTTP/HTTPS daemons on port 80/443
NOTE
- open a REPL:
 $ irb -rww
- to listen on 80/443 (optional, already can listen >1024 behind apache/nginx/lighttpd)
 $ setcap cap_net_bind_service=+ep $(realpath `which ruby`)
- shell-binding to resource methods. ex: R http://bl.og feeds
 $ cp ruby/R ~/bin 
- wipe RDF cache
 $ rm -rf cache
